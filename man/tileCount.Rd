% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tileCount.R
\name{tileCount}
\alias{tileCount}
\title{Perform overlap queries between reads and genome by windows}
\usage{
tileCount(reads, genome, windowSize = 100000L, step = 10000L,
  mode = IntersectionNotStrict, dataOverSamples = FALSE, ...)
}
\arguments{
\item{reads}{A \link[GenomicRanges:GRanges-class]{GRanges},
\link[GenomicRanges:GRangesList-class]{GRangesList} (should be one read per list element),
\link[GenomicAlignments:GAlignments-class]{GAlignments},
\link[GenomicAlignments:GAlignmentsList-class]{GAlignmentsList},
\link[GenomicAlignments:GAlignmentPairs-class]{GAlignmentPairs} or
\link[Rsamtools:BamFileList-class]{BamFileList} object that represents the data to be
counted by \code{\link[GenomicAlignments:summarizeOverlaps-methods]{summarizeOverlaps}}. If reads are more than 1 bam files,
it should be a vector of character with full path, otherwise current working directory 
is the default directory.}

\item{genome}{A BSgenome object from/on which to get/set the sequence and metadata information.}

\item{windowSize}{numeric(1) or integer(1). Size of the windows.}

\item{step}{numeric(1) or integer(1). Step of generating silding windows.}

\item{mode}{One of the pre-defined count methods.
see \link[GenomicAlignments:summarizeOverlaps-methods]{summarizeOverlaps}.
default is countByOverlaps, alia of countOverlaps(features, reads, ignore.strand=ignore.strand)}

\item{dataOverSamples}{logical(1). Data over several samples when use
\link[GenomicRanges:GRangesList-class]{GRangesList} as input.}

\item{...}{Additional arguments passed to
\code{\link[GenomicAlignments:summarizeOverlaps-methods]{summarizeOverlaps}}.}
}
\value{
A \link[SummarizedExperiment:RangedSummarizedExperiment-class]{RangedSummarizedExperiment} object.
The assays slot holds the counts, rowRanges holds the annotation from the
sliding widows of genome.
metadata contains lib.size.chrom for holding chromosome-level sequence depth
}
\description{
tileCount extends \link[GenomicAlignments:summarizeOverlaps-methods]{summarizeOverlaps} by finding coverage for
each fixed window in the whole genome
}
\examples{
\dontrun{
fls <- list.files(system.file("extdata", package="GenomicAlignments"),
recursive=TRUE, pattern="*bam$", full=TRUE)
names(fls) <- basename(fls)
genes <- GRanges(seqlengths = c(chr2L=7000, chr2R=10000))
se <- tileCount(fls, genes, windowSize=1000, step=500)
}

##
genome <- GRanges(c("chr1","chr2"), IRanges(c(1,1), c(1000,1000)))
seqlengths(genome) <- c(chr1=1000, chr2=1000)
reads <- GRanges("chr1", IRanges((seq_len(90))*10, width=10))
tileCount(reads, genome, windowSize=100, step=50)
reads.2 <- GRangesList(GRanges("chr2", IRanges((seq_len(90))*10, width=10)), reads)
tileCount(reads.2, genome, windowSize=100, step=50)
}
\author{
Jianhong Ou, Haibo Liu and Julie Zhu
}
